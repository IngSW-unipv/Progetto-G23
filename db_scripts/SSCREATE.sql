-- Create all the tables for StadiumSystem
create schema if not exists stadiumsystem charset utf16;

use stadiumsystem;

create table UTENTI (
		EMAIL CHAR(255) PRIMARY KEY,
        NOME CHAR(255),
        COGNOME CHAR(255),
        PASS CHAR(255),			-- temp
        TIPO ENUM('ADMIN', 'CLIENTE'),
        NASCITA DATE
);

create table ABBONAMENTI (
		EMAIL CHAR(255) PRIMARY KEY,
        GRADO ENUM('LIV0', 'LIV1', 'LIV2', 'LIV3'),		-- temp
        FOREIGN KEY (EMAIL) REFERENCES UTENTI(EMAIL) ON UPDATE CASCADE ON DELETE CASCADE
);

create table PARTITE (
		DAT DATETIME PRIMARY KEY,
        AVVERSARIO CHAR(32),
        PREZZO float4,
        BIGLIETTI_RIMANENTI MEDIUMINT
);

create table POSTI (
		DAT DATETIME,
        SETTORE SMALLINT,
        BLOCCO SMALLINT,
        ANELLO SMALLINT,
        POSTO SMALLINT,
        EMAIL CHAR(255),
        FOREIGN KEY (DAT) REFERENCES PARTITE(DAT) ON UPDATE CASCADE ON DELETE CASCADE,
        FOREIGN KEY (EMAIL) REFERENCES UTENTI(EMAIL) ON UPDATE CASCADE ON DELETE CASCADE,
        PRIMARY KEY (DAT, SETTORE, BLOCCO, ANELLO, POSTO)
);

create table STORE_ITEMS (
		ID MEDIUMINT AUTO_INCREMENT PRIMARY KEY,
        NOME CHAR(255),
        PREZZO float4,
        QUANTITA_RIMANENTE MEDIUMINT,
        DESCRIZIONE TEXT
);

create table ACQUISTI_STORE (
		ID MEDIUMINT AUTO_INCREMENT PRIMARY KEY,
		ITEM MEDIUMINT,
        BUYER CHAR(255),
        QUANTITA MEDIUMINT,
        FOREIGN KEY (ITEM) REFERENCES STORE_ITEMS(ID) ON UPDATE CASCADE ON DELETE CASCADE,
        FOREIGN KEY (BUYER) REFERENCES UTENTI(EMAIL) ON UPDATE CASCADE ON DELETE CASCADE
);

create table MUSEO_ITEMS (
		ID MEDIUMINT AUTO_INCREMENT PRIMARY KEY,
        NOME CHAR(255),
        ANNO SMALLINT,
        DESCRIZIONE TEXT,
        NOME_IMG TEXT
);

create table BIGLIETTI_MUSEO (
		EMAIL CHAR(255),
		EMAIL_CONFERMA CHAR(255),
        NUMERO_PERSONE TINYINT,
        FOREIGN KEY (EMAIL) REFERENCES UTENTI(EMAIL) ON UPDATE CASCADE ON DELETE CASCADE,
        DAT DATE,
        ORA TIME,
        PRIMARY KEY (EMAIL, DAT)
);

create table CARTA_PAGAMENTO (
		EMAIL CHAR(255),
		NOME CHAR(255),
		COGNOME CHAR(255),
		NUMERO CHAR(16) PRIMARY KEY,
		SCADENZA_MESE TINYINT,
		SCADENZA_ANNO MEDIUMINT,
		FOREIGN KEY (EMAIL) REFERENCES UTENTI(EMAIL)  ON UPDATE CASCADE ON DELETE CASCADE
);